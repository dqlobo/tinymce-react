{"version":3,"file":"main.43e15e716e795d6bba30.bundle.js","sources":["webpack:///./src/Utils.ts"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EditorPropTypes_1 = require(\"./components/EditorPropTypes\");\nvar isValidKey = function (keys) { return function (key) { return keys.indexOf(key) !== -1; }; };\n// tslint:disable-next-line:ban-types\nexports.isFunction = function (x) { return typeof x === 'function'; };\nexports.bindHandlers = function (props, editor, initEvent) {\n    Object.keys(props)\n        .filter(isValidKey(Object.keys(EditorPropTypes_1.eventPropTypes)))\n        .forEach(function (key) {\n        var handler = props[key];\n        if (exports.isFunction(handler)) {\n            if (key === 'onInit') {\n                handler(initEvent, editor);\n            }\n            else {\n                editor.on(key.substring(2), function (e) { return handler(e, editor); });\n            }\n        }\n    });\n};\nvar unique = 0;\nexports.uuid = function (prefix) {\n    var date = new Date();\n    var time = date.getTime();\n    var random = Math.floor(Math.random() * 1000000000);\n    unique++;\n    return prefix + '_' + random + unique + String(time);\n};\nexports.isTextarea = function (element) {\n    return element !== null && element.tagName.toLowerCase() === 'textarea';\n};\nvar normalizePluginArray = function (plugins) {\n    if (typeof plugins === 'undefined' || plugins === '') {\n        return [];\n    }\n    return Array.isArray(plugins) ? plugins : plugins.split(' ');\n};\nexports.mergePlugins = function (initPlugins, inputPlugins) {\n    return normalizePluginArray(initPlugins).concat(normalizePluginArray(inputPlugins));\n};\n"],"mappings":"AAQA","sourceRoot":""}